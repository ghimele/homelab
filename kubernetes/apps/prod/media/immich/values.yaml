---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      chart: immich
      version: 0.10.1
      sourceRef:
        kind: HelmRepository
        name: immich
        namespace: flux-system

  values:
    # These entries are shared between all the Immich components
    controllers:
      main:
        containers:
          main:
            image:
              tag: v2.0.1
            env:
              REDIS_HOSTNAME: '{{ printf "%s-valkey" .Release.Name }}'
              IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
              DB_URL: ${IMMICH_DB_URL}
              DB_HOSTNAME: ${IMMICH_DB_HOSTNAME}
              DB_USERNAME: ${IMMICH_DB_USERNAME}
              DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
              DB_PASSWORD: ${IMMICH_DB_PASSWORD}
              DB_VECTOR_EXTENSION: pgvector
              PUBLIC_IMMICH_SERVER_URL: https://${HOST_IMMICH}.${DOMAIN}

    immich:
      metrics:
        # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
        enabled: true
      persistence:
        # Main data store for all photos shared between different components.
        library:
          # Automatically creating the library volume is not supported by this chart
          # You have to specify an existing PVC to use
          existingClaim: photos
      configuration: {}

    # Dependencies
    valkey:
      enabled: true
      controllers:
        main:
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 500m
          containers:
            main:
              image:
                repository: docker.io/valkey/valkey
                tag: 9.0-alpine@sha256:b4ee67d73e00393e712accc72cfd7003b87d0fcd63f0eba798b23251bfc9c394
                pullPolicy: IfNotPresent
      persistence:
        data:
          enabled: true
          type: persistentVolumeClaim
          existingClaim: valkey-data

    # Immich components
    server:
      enabled: true
      controllers:
        main:
          containers:
            main:
              image:
                repository: ghcr.io/immich-app/immich-server
                pullPolicy: IfNotPresent
      ingress:
        main:
          enabled: false
      # -- Node selector for pod scheduling.
      nodeSelector:
        # We will install all the services on nodes labeled as storage:NFS (the agent nodes)
        node-role.kubernetes.io/nfs: ""

    machine-learning:
      enabled: true
      controllers:
        main:
          containers:
            main:
              image:
                repository: ghcr.io/immich-app/immich-machine-learning
                pullPolicy: IfNotPresent
              env:
                TRANSFORMERS_CACHE: /cache
                HF_XET_CACHE: /cache/huggingface-xet
                MPLCONFIGDIR: /cache/matplotlib-config
      persistence:
        cache:
          enabled: true
          size: 10Gi
          # Optional: Set this to pvc to avoid downloading the ML models every start.
          # type: emptyDir
          accessMode: ReadWriteMany
          storageClass: longhorn
